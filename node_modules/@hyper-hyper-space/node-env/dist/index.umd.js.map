{"version":3,"file":"index.umd.js","sources":["../src/NodeEnvironment.ts"],"sourcesContent":["import WebSocket  from 'ws';\r\nimport * as http from 'http';\r\n\r\nclass WebSocketServer {\r\n\r\n    listener: WebSocket.Server;\r\n    onConnection?: (socket: WebSocket, url: string) => void\r\n\r\n    constructor(options: any) {\r\n        this.listener = new WebSocket.Server(options);\r\n        this.listener.on('connection', (socket: WebSocket, request: http.IncomingMessage) => {\r\n            let url = request.url as string;\r\n            if (this.onConnection != undefined) {\r\n                this.onConnection(socket, url);\r\n            }\r\n        });\r\n    }\r\n\r\n    close() {\r\n        this.listener.close();\r\n    }\r\n}\r\n\r\n(global as any).WebSocketServerImpl = WebSocketServer;\r\n\r\nrequire(\"fake-indexeddb/auto\");\r\nglobal.RTCPeerConnection = require('wrtc').RTCPeerConnection;\r\n\r\nif (global.btoa === undefined) {\r\n    global.btoa = require('btoa');\r\n}\r\n\r\nif (global.atob === undefined) {\r\n    global.atob = require('atob');\r\n}\r\n\r\nif (global.WebSocket === undefined) {\r\n    (global as any).WebSocket = WebSocket;\r\n}\r\n\r\n\r\n\r\n\r\n"],"names":["global","WebSocketServerImpl","options","this","listener","WebSocket","Server","on","socket","request","undefined","_this","onConnection","url","close","require","RTCPeerConnection","btoa","atob"],"mappings":"mPAuBCA,OAAeC,+BAfZ,WAAYC,cACRC,KAAKC,SAAW,IAAIC,EAAUC,OAAOJ,GACrCC,KAAKC,SAASG,GAAG,aAAc,SAACC,EAAmBC,GAEtBC,MAArBC,EAAKC,cACLD,EAAKC,aAAaJ,EAFZC,EAAQI,0BAO1BC,MAAA,WACIX,KAAKC,SAASU,cAMtBC,QAAQ,uBACRf,OAAOgB,kBAAoBD,QAAQ,QAAQC,uBAEvBN,IAAhBV,OAAOiB,OACPjB,OAAOiB,KAAOF,QAAQ,cAGNL,IAAhBV,OAAOkB,OACPlB,OAAOkB,KAAOH,QAAQ,cAGDL,IAArBV,OAAOK,YACNL,OAAeK,UAAYA"}